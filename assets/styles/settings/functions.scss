// /* ========================================================================= */
// /* Icons */
// /* ========================================================================= */

// /**
//  * URL-encode SVG code.
//  * 1. Loops through each character in string.
//  * 2. Checks if character is in symbol map.
//  * 3. If it is, uses escaped version.
//  * 4. Appends character to escaped string.
//  * 5. Returns escaped string.
//  */
//  @function url-encode($string) {
//     $escaped-string: '';

//     /* [1] */
//     @for $i from 1 through str-length($string) {
//         $char: str-slice($string, $i, $i);

//         /* [2] */
//         $char-lookup: map-get($fs-escape-chars, $char);

//         /* [3] */
//         @if $char-lookup != null {
//             $char: $char-lookup;
//         }

//         /* [4] */
//         $escaped-string: $escaped-string + $char;
//     }

//     /* [5] */
//     @return $escaped-string;
// }


// /**
//  * Helper to get URL-escaped inline SVG code for use with `background-image`.
//  * 1. Checks if icon exists.
//  * 2. Gets icon data.
//  * 3. Returns inline SVG data.
//  */
// @function svg($name, $color: false, $other: false) {
//     /* [1] */
//     @if not map-has-key($svg-icons, $name) {
//         @error 'icon “#{$name}” does not exists in $svg-icons map';
//         @return false;
//     }

//     /* [2] */
//     $icon-map: map-get($svg-icons, $name);

//     /* [3] */
//     @return url('data:image/svg+xml, #{url-encode(unquote($icon-map))} ');
// }