/* ========================================================================= */
/* Scroll */
/* ========================================================================= */

/**
 * Disabled the scroll within the page.
 */
html[data-locked='true'],
html[data-locked='true'] body {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    padding-right: var(--sb) !important;
}
 
/* ========================================================================= */
/* Focus */
/* ========================================================================= */
 
/**
 * 1. When the user doesn’t use the keyboard, let’s remove the focus ring.
 * 2. For accessibility reasons, we sometimes need to focus an item
 *    with `tabindex='-1'`. Thus, voiceover reads the content, yet we don’t
 *    need the focus ring here.
 */
html[data-whatintent]:not([data-whatintent='keyboard']) *:focus,
[tabindex='-1']:not(.show-focus):focus {
    outline: none;
}

/* ========================================================================= */
/* Expand interactions */
/* ========================================================================= */

/**
 * Expands the clickable area of the nested link to the current element.
 * This technique is useful to ensure the link labels are optimised for tools
 * such as screenreaders.
 * 1. Expands the main action to the container boundaries of its container.
 * 2. Places all other links/buttons on top of the expanded action (to preserve
      their ‘clickability’).
 */
.expand-interaction {
    position: relative;
}

/* [1] */
.expand-interaction .expand-interaction__action::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
}

/* [2] */
.expand-interaction a:not(.expand-interaction__action),
.expand-interaction button:not(.expand-interaction__action) {
    position: relative;
    z-index: 2;
}

/* ========================================================================= */
/* Visibility */
/* ========================================================================= */

/**
 * Hides the content visually but preserves its access to browsing tools
 * such as screen readers. If the element receives the focus, the content 
 * is displayed on screen.
 */
.visually-hidden:not(:focus):not(:focus-within):not(:active) {
    border-width: 0;
    clip: rect(0, 0, 0, 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

@include media-query('m') {
    .m-visually-hidden:not(:focus):not(:focus-within):not(:active) {
        border-width: 0;
        clip: rect(0, 0, 0, 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }
}