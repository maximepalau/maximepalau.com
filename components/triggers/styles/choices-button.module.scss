.container {
    display: inline-flex;
    align-items: center;
    position: relative;
}

.toggle {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 4.9rem;
    height: 4.9rem;
    margin-left: .8rem;
    padding: 0;
    border: 1px solid currentColor;
    border-radius: 50%;
    transition: border-color .2s ease-out;
}

.toggle:hover {
    border-color: var(--dark-grey);
}

/**
 * Disables the button (only for clicks) so we avoid a behaviour collision
 * between the focus leave and reclicks on the toggle button.
 * 1. Keeps an active cursor around the button.
 */
 .toggleDisabled {
    pointer-events: none;
}

.toggleWrapper {
    display: inline-block;
    border-radius: 50%;
    cursor: pointer; /* [1] */
}

.list {
    margin-top: .8rem;
    position: absolute;
    top: 100%;
    left: 0;
    transform: scale(.8);
    border-radius: .8rem;
    border: 1px solid currentColor;
    opacity: 0;
    transition: opacity .2s ease-out, .2s transform ease-out;
    z-index: $z-list-box;
    pointer-events: none;
    overflow: hidden;
}

.list:focus-within {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
}

.listItem {}

.listItem:not(:first-child) {
    border-top: 1px solid currentColor;
}

.listButton {
    display: block;
    width: 100%;
    padding: 1.2rem 1.6rem;
    position: relative;
    text-align: left;
    background-color: var(--default-background-color);
    transition: background-color .2s ease-out;
}

.listButton:hover {
    background-color: var(--darker-background-color);
}

/* ========================================================================= */
/* From decent phone size */
/* ========================================================================= */

@media (min-width: 22em) {
    .list {
        left: auto;
        right: 0;
        transform: translateX(50%) translateX(calc(4.9rem / 2 * -1)) scale(.8);
    }

    .list:focus-within {
        transform: translateX(50%) translateX(calc(4.9rem / 2 * -1)) scale(1);
    }
}